import axios from "axios";
import { message } from "antd";

const instance = axios.create({
  baseURL: "http://localhost:5082/api",
  headers: {
    "Content-Type": "application/json",
  },
});

instance.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem("token");
    if (token) {
      config.headers["Authorization"] = `Bearer ${token}`;
    }
    return config;
  },
  (error) => Promise.reject(error)
);

instance.interceptors.response.use(
  (response) => {
    return response?.data ?? response;
  },
  (error) => {
    if (error.response) {
      const status = error.response.status;

      if (status === 401) {
        message.warning("Phi√™n ƒëƒÉng nh·∫≠p ƒë√£ h·∫øt h·∫°n. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i!");
        // üßπ X√≥a token c≈©
        localStorage.removeItem("token");
        localStorage.removeItem("user");
        // ‚è≥ Ch·ªù m·ªôt ch√∫t ƒë·ªÉ ng∆∞·ªùi d√πng th·∫•y th√¥ng b√°o
        setTimeout(() => {
          window.location.href = "/login";
        }, 1500);
      } else if (status === 403) {
        message.error("B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p!");
      } else if (status === 500) {
        message.error("L·ªói m√°y ch·ªß. Vui l√≤ng th·ª≠ l·∫°i sau!");
      } else {
        message.error(error.response.data?.message || "ƒê√£ x·∫£y ra l·ªói!");
      }

      return Promise.reject(error.response.data);
    }

    message.error("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß!");
    return Promise.reject(error);
  }
);

export default instance;
